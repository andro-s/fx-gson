// bintray plugin is used to upload artifacts to a bintray repo
plugins { id "com.jfrog.bintray" version "1.6" }

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'

group = 'org.hildan.fxgson'
version = '2.0.0'
description = 'A Gson extension to make it easy to deal with JavaFX properties.'
ext.labels = ['json', 'gson', 'javafx', 'property']

sourceCompatibility = 1.8

repositories { mavenCentral() }

dependencies {
    compile 'com.google.code.gson:gson:2.+'
    compile 'org.jetbrains:annotations:15.0'
    testCompile 'junit:junit:4.+'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            // additional jars
            artifact sourcesJar { classifier "sources" }
            artifact javadocJar { classifier "javadoc" }
        }
    }
}

ext {
    githubUser = project.hasProperty('githubUser') ? project.githubUser : System.getenv('GITHUB_USER')
    githubRepoName = project.name
}

bintray {
    user = project.hasProperty('bintrayUsername') ? project.bintrayUsername : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.bintrayApiKey : System.getenv('BINTRAY_KEY')
    publications = ['maven']
    publish = true // the version should be auto published after an upload

    pkg {
        repo = project.hasProperty('bintrayRepoLibs') ? project.bintrayRepoLibs : System.getenv('BINTRAY_REPO_LIBS')
        name = project.name
        desc = project.description
        labels = project.labels
        licenses = ['MIT']

        websiteUrl = 'https://github.com/' + githubUser + '/' + githubRepoName
        issueTrackerUrl = 'https://github.com/' + githubUser + '/' + githubRepoName + '/issues'
        vcsUrl = 'https://github.com/' + githubUser + '/' + githubRepoName + '.git'
        githubRepo = githubUser + '/' + githubRepoName
        githubReleaseNotesFile = 'README.md'

        version {
            vcsTag = 'v' + project.version
            gpg { sign = true }
        }
    }
}